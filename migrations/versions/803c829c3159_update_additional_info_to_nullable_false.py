"""update additional info to nullable false

Revision ID: 803c829c3159
Revises: ca2a64e59d34
Create Date: 2024-04-27 19:43:38.182540

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '803c829c3159'
down_revision: Union[str, None] = 'ca2a64e59d34'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('download_user_id_fkey', 'download', type_='foreignkey')
    op.alter_column('information', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('information', 'technology',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=False)
    op.alter_column('information', 'tg',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('information', 'vk',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('information', 'education',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('information', 'work',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('information', 'work',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('information', 'education',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('information', 'vk',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('information', 'tg',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('information', 'technology',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=True)
    op.alter_column('information', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_foreign_key('download_user_id_fkey', 'download', 'user', ['user_id'], ['id'])
    # ### end Alembic commands ###
